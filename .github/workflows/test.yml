name: Enterprise Test Suite - Flutter 3.32.x TDD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    # Daily testing at 2 AM UTC
    - cron: '0 2 * * *'

env:
  FLUTTER_VERSION: '3.32.0'
  DART_VERSION: '3.8.0'

jobs:
  # エンタープライズレベル品質ゲート
  quality-gate:
    name: 🚨 Enterprise Quality Gate
    runs-on: ubuntu-latest

    strategy:
      matrix:
        flutter-version: ['3.32.0', 'stable']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ matrix.flutter-version }}
        cache: true

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Create .env file for testing
      run: |
        cat > .env << EOF
        API_BASE_URL=https://test-api.fatgram.com
        API_TIMEOUT=30
        FIREBASE_PROJECT_ID=test-firebase-project
        OPENAI_API_KEY=test-openai-key
        GEMINI_API_KEY=test-gemini-key
        WEB_SEARCH_API_KEY=test-websearch-key
        REVENUECAT_API_KEY=test-revenuecat-key
        ENVIRONMENT=development
        ENCRYPTION_KEY=test-encryption-key-32-chars
        OPTIONAL_CONFIG=test-optional-value
        HEALTHKIT_ENABLED=false
        HEALTH_CONNECT_ENABLED=false
        EOF

    - name: Get dependencies
      run: flutter pub get

    - name: Verify the installation
      run: flutter doctor -v

    - name: Run analyzer
      run: flutter analyze

    - name: Run tests
      run: flutter test --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

    - name: Generate test report
      if: always()
      run: |
        flutter test --reporter json > test_results.json || true

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.flutter-version }}
        path: test_results.json

  test-integration:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: 3.22.0
        cache: true

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Create .env file for testing
      run: |
        cat > .env << EOF
        API_BASE_URL=https://test-api.fatgram.com
        API_TIMEOUT=30
        FIREBASE_PROJECT_ID=test-firebase-project
        OPENAI_API_KEY=test-openai-key
        REVENUECAT_API_KEY=test-revenuecat-key
        ENVIRONMENT=development
        ENCRYPTION_KEY=test-encryption-key-32-chars
        OPTIONAL_CONFIG=test-optional-value
        EOF

    - name: Get dependencies
      run: flutter pub get

    - name: Run integration tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 33
        arch: x86_64
        profile: Nexus 6
        script: flutter test integration_test/

  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit
      run: |
        if [ -f pubspec.yaml ]; then
          flutter pub deps --style=compact | grep -E "^\|" | grep -v "✓" || true
        fi

    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD