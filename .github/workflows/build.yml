name: Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: 3.22.0
        cache: true

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Create .env file
      run: |
        cat > .env << EOF
        API_BASE_URL=${{ secrets.API_BASE_URL }}
        API_TIMEOUT=30
        FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
        OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        REVENUECAT_API_KEY=${{ secrets.REVENUECAT_API_KEY }}
        ENVIRONMENT=production
        ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}
        EOF

    - name: Get dependencies
      run: flutter pub get

    - name: Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs

    - name: Build APK
      run: flutter build apk --release

    - name: Build App Bundle
      run: flutter build appbundle --release

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-release.apk

    - name: Upload App Bundle
      uses: actions/upload-artifact@v4
      with:
        name: android-aab
        path: build/app/outputs/bundle/release/app-release.aab

  build-ios:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: 3.22.0
        cache: true

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.2'

    - name: Install CocoaPods
      run: sudo gem install cocoapods

    - name: Create .env file
      run: |
        cat > .env << EOF
        API_BASE_URL=${{ secrets.API_BASE_URL }}
        API_TIMEOUT=30
        FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
        OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        REVENUECAT_API_KEY=${{ secrets.REVENUECAT_API_KEY }}
        ENVIRONMENT=production
        ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}
        EOF

    - name: Get dependencies
      run: flutter pub get

    - name: Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs

    - name: Install pods
      run: cd ios && pod install

    - name: Build iOS (no code sign)
      run: flutter build ios --release --no-codesign

    - name: Upload iOS build
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: build/ios/iphoneos/Runner.app

  build-web:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: 3.22.0
        cache: true

    - name: Create .env file
      run: |
        cat > .env << EOF
        API_BASE_URL=${{ secrets.API_BASE_URL }}
        API_TIMEOUT=30
        FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
        OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        REVENUECAT_API_KEY=${{ secrets.REVENUECAT_API_KEY }}
        ENVIRONMENT=production
        ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}
        EOF

    - name: Get dependencies
      run: flutter pub get

    - name: Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs

    - name: Build Web
      run: flutter build web --release --web-renderer html

    - name: Upload Web build
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: build/web/

  performance:
    runs-on: ubuntu-latest
    needs: [build-android]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download APK
      uses: actions/download-artifact@v4
      with:
        name: android-apk
        path: ./apk/

    - name: Analyze APK size
      run: |
        APK_SIZE=$(stat -c%s apk/app-release.apk)
        echo "APK size: $APK_SIZE bytes"
        echo "APK_SIZE=$APK_SIZE" >> $GITHUB_ENV

        if [ $APK_SIZE -gt 52428800 ]; then  # 50MB
          echo "Warning: APK size exceeds 50MB"
          exit 1
        fi

    - name: Comment PR with APK size
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const apkSize = process.env.APK_SIZE;
          const sizeMB = (apkSize / 1024 / 1024).toFixed(2);

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ðŸ“± **APK Build Size**: ${sizeMB} MB`
          });